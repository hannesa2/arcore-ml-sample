name: PullRequest

on: [ pull_request ]

jobs:
  buildRelease:
    name: Build Release JDK ${{ matrix.java_version }}
    runs-on: macOS-latest
    strategy:
      matrix:
        java_version: [ 11 ]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Install JDK ${{ matrix.java_version }}
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: ${{ matrix.java_version }}
      - name: Install Android SDK
        uses: malinskiy/action-android/install-sdk@release/0.1.4
      - name: Prepare debug keystore
        run: mkdir -p /Users/runner/android-sdk/sdk_home/.android
      - name: Debug keystore
        run: keytool -genkey -v -keystore /Users/runner/android-sdk/sdk_home/.android/debug.keystore -storepass android -alias androiddebugkey -keypass android -keyalg RSA -keysize 2048 -validity 10000 -dname "C=US, O=Android, CN=Android Debug"
      - name: Build project
        run: ./gradlew assembleRelease
  buildTest:
    name: Build & Test JDK ${{ matrix.java_version }}
    runs-on: macOS-latest
    strategy:
      matrix:
        java_version: [ 11 ]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Install JDK ${{ matrix.java_version }}
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: ${{ matrix.java_version }}
      - name: Install Android SDK
        uses: malinskiy/action-android/install-sdk@release/0.1.4
      - name: Prepare debug keystore
        run: mkdir -p /Users/runner/android-sdk/sdk_home/.android
      - name: Debug keystore
        run: keytool -genkey -v -keystore /Users/runner/android-sdk/sdk_home/.android/debug.keystore -storepass android -alias androiddebugkey -keypass android -keyalg RSA -keysize 2048 -validity 10000 -dname "C=US, O=Android, CN=Android Debug"
      - name: Build project
        run: ./gradlew assembleDebug
      - name: Run tests
        run: ./gradlew test
  #      - name: Run instrumentation tests
  #        uses: malinskiy/action-android/emulator-run-cmd@release/0.1.4
  #        with:
  #          cmd: ./gradlew cAT
  #          api: 28
  #          tag: default
  #          abi: x86
  #      - name: Archive Espresso results
  #        uses: actions/upload-artifact@v2.0.1
  #        with:
  #          name: LiveEdgeDetection-Espresso-report
  #          path: app/build/reports/androidTests/connected
  #      - name: Save logcat output
  #        uses: actions/upload-artifact@master
  #        if: failure()
  #        with:
  #          name: LiveEdgeDetection-logcat
  #          path: artifacts/logcat.log
  #      - name: Archive screenshots
  #        uses: actions/upload-artifact@v4
  #        with:
  #          name: LiveEdgeDetection-Screenshots
  #          path: screenshots/adb
  Check:
    name: Check
    runs-on: macOS-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Install JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: 11
      - name: Install Android SDK
        uses: malinskiy/action-android/install-sdk@release/0.1.4
      - name: Code checks
        run: ./gradlew check
      - name: Archive Lint report
        uses: actions/upload-artifact@v4
        if: ${{ always() }}
        with:
          name: DICOM-Lint-report
          path: app/build/reports/lint-results.html
